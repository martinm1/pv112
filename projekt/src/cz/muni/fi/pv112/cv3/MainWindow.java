package cz.muni.fi.pv112.cv3;

import com.jogamp.opengl.GLCapabilities;
import com.jogamp.opengl.GLContext;
import com.jogamp.opengl.GLProfile;
import com.jogamp.opengl.awt.GLJPanel;
import com.jogamp.opengl.util.FPSAnimator;
import java.awt.BorderLayout;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

/**
 *
 * @author Adam Jurcik <xjurc@fi.muni.cz>
 */
public class MainWindow extends javax.swing.JFrame {

    private GLJPanel panel;
    private Camera camera;
    private Scene scene;
    private FPSAnimator animator;
    private boolean fullscreen = false;    
    
    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        
        setTitle("projekt_pv112");
        
        GLProfile profile = GLProfile.get(GLProfile.GL3);
        panel = new GLJPanel(new GLCapabilities(profile));
        panel.setContextCreationFlags(GLContext.CTX_OPTION_DEBUG);
        
        add(panel, BorderLayout.CENTER);
        
        animator = new FPSAnimator(panel, 60, true);
        camera = new Camera();
        scene = new Scene(animator, camera);
        
        panel.addGLEventListener(scene);
        panel.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                MainWindow.this.keyPressed(e);
            }
        });
        panel.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseMoved(MouseEvent e) {
                camera.updateMousePosition(e.getX(), e.getY());
                panel.display();//mojemoje buffer 28.4.2016
            }
            @Override
            public void mouseReleased(MouseEvent e) {
                // TODO
                if (e.getButton() == MouseEvent.BUTTON1) {
                    camera.updateMouseButton(Button.LEFT, false, e.getX(), e.getY());
                } else if (e.getButton() == MouseEvent.BUTTON3) {
                    camera.updateMouseButton(Button.RIGHT, false, e.getX(), e.getY());
                }
            }
            @Override
            public void mousePressed(MouseEvent e) {
                // TODO
                if (e.getButton() == MouseEvent.BUTTON1) {
                    camera.updateMouseButton(Button.LEFT, true, e.getX(), e.getY());
                } else if (e.getButton() == MouseEvent.BUTTON3) {
                    camera.updateMouseButton(Button.RIGHT, true, e.getX(), e.getY());
                }
            }
        });
        panel.addMouseMotionListener(new MouseAdapter() {
            @Override
            public void mouseDragged(MouseEvent e) {
                camera.updateMousePosition(e.getX(), e.getY());
                panel.display();//mojemoje buffer 28.4.2016
            }
        });
        
        animator.start();
    }  
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(480, 480));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void keyPressed(KeyEvent e) {
        switch (e.getKeyCode()) {
            case KeyEvent.VK_ESCAPE:
                System.exit(0);
                break;
            
            case KeyEvent.VK_A:
                toggleAnimation();
                break;
                
            case KeyEvent.VK_T:
                toggleFullScreen();
                break;
                //zacatek mojemoje 28.4.2016 buffer
            case KeyEvent.VK_F:
                scene.toggleFill();
                break;
                
            case KeyEvent.VK_L:
                scene.toggleLines();
                break; //konec mojemoje 28.4.2016 buffer
        }
        
        panel.display();
    }
    
    private void toggleAnimation() {
        if (animator.isAnimating()) {
            animator.stop();
        } else {
            animator.start();
        }
    }
    
    private void toggleFullScreen() {
        fullscreen = !fullscreen;
        
        if (animator.isAnimating()) {
            animator.stop();
        }
        
        dispose();
        setUndecorated(fullscreen);
        pack();
        
        GraphicsEnvironment environment = GraphicsEnvironment.getLocalGraphicsEnvironment();
        GraphicsDevice device = environment.getDefaultScreenDevice();
        
        if (fullscreen) {
            device.setFullScreenWindow(this);
        } else {
            device.setFullScreenWindow(null);
        }
        setVisible(true);
        animator.start();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
